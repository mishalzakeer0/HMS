name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to EC2
      run: |
        # Replace with your actual EC2 public IP
        EC2_PUBLIC_IP=<YOUR_EC2_PUBLIC_IP>

        # Generate a temporary SSH key (less secure)
        ssh-keygen -b 2048 -t rsa -f /tmp/private_key -N '' 
        chmod 600 /tmp/private_key  # Set proper permissions

        # Copy the public key to the EC2 instance
        ssh-copy-id -i /tmp/private_key.pub -o StrictHostKeyChecking=no ubuntu@$EC2_PUBLIC_IP

        # SSH into the EC2 instance and deploy the application
        ssh -o StrictHostKeyChecking=no -i /tmp/private_key ubuntu@$EC2_PUBLIC_IP << 'EOF'
          cd /home/ubuntu/HMS
          git pull
          npm install
          pm2 restart HMS

          # Create .env file and set values (or manage env vars directly in PM2 or the shell environment)
          echo "PORT=${PORT}" > .env
          echo "ADMIN_KEY=${ADMIN_KEY}" >> .env
          # Repeat for other environment variables...

          # Restart application
          pm2 restart HMS
        EOF

        # Cleanup temporary keys
        rm /tmp/private_key /tmp/private_key.pub
      env:
        PORT: ${{ secrets.PORT }}
        ADMIN_KEY: ${{ secrets.ADMIN_KEY }}
        USER_KEY: ${{ secrets.USER_KEY }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_MAIL: ${{ secrets.SMTP_MAIL }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
        MYSQL_ADDON_DB: ${{ secrets.MYSQL_ADDON_DB }}
        MYSQL_ADDON_USER: ${{ secrets.MYSQL_ADDON_USER }}
        MYSQL_ADDON_PASSWORD: ${{ secrets.MYSQL_ADDON_PASSWORD }}
        MYSQL_ADDON_HOST: ${{ secrets.MYSQL_ADDON_HOST }}
