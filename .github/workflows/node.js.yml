name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to EC2
      env:
        PORT: ${{ secrets.PORT }}
        ADMIN_KEY: ${{ secrets.ADMIN_KEY }}
        USER_KEY: ${{ secrets.USER_KEY }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_MAIL: ${{ secrets.SMTP_MAIL }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
        MYSQL_ADDON_DB: ${{ secrets.MYSQL_ADDON_DB }}
        MYSQL_ADDON_USER: ${{ secrets.MYSQL_ADDON_USER }}
        MYSQL_ADDON_PASSWORD: ${{ secrets.MYSQL_ADDON_PASSWORD }}
        MYSQL_ADDON_HOST: ${{ secrets.MYSQL_ADDON_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no -i /tmp/private_key.pem ubuntu@<YOUR_EC2_PUBLIC_IP> << 'EOF'
          cd /path/to/your/application
          git pull
          npm install
          pm2 restart your-app-name
        EOF
          # Create .env file and set values
          echo "PORT=${PORT}" > .env
          echo "ADMIN_KEY=${ADMIN_KEY}" >> .env
          echo "USER_KEY=${USER_KEY}" >> .env
          echo "SMTP_HOST=${SMTP_HOST}" >> .env
          echo "SMTP_PORT=${SMTP_PORT}" >> .env
          echo "SMTP_MAIL=${SMTP_MAIL}" >> .env
          echo "SMTP_PASS=${SMTP_PASS}" >> .env
          echo "MYSQL_ADDON_DB=${MYSQL_ADDON_DB}" >> .env
          echo "MYSQL_ADDON_USER=${MYSQL_ADDON_USER}" >> .env
          echo "MYSQL_ADDON_PASSWORD=${MYSQL_ADDON_PASSWORD}" >> .env
          echo "MYSQL_ADDON_HOST=${MYSQL_ADDON_HOST}" >> .env
          
          # Install dependencies and restart application
          npm install
          pm2 restart your-app-name
        EOF
      shell: bash
